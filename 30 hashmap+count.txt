class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
        ArrayList<Integer> res=new ArrayList<Integer>();
        if(words.length==0) return res;
		int len=words[0].length();
		HashMap<String, Integer> themap=new HashMap<String, Integer>();
		for(String x: words) {
			if (themap.containsKey(x)) themap.put(x, themap.get(x)+1);
			else themap.put(x, 1);
		}
		System.out.println("initial map size:"+themap.size());
		for(int i=0; i<s.length(); i++) {
			HashMap<String, Integer> copymap=new HashMap<>(themap);
			if (check30(s.substring(i), copymap, len)) {
				System.out.println(i);
				res.add(i);
			}
		}
		return res;
        
    }
    private boolean check30(String input, HashMap<String, Integer> themap, int len) {
		if (themap.isEmpty()) {
			return true;
		}
		if(input.length()<len) return false;
		if(themap.containsKey(input.substring(0, len))) {
			if(themap.get(input.substring(0,len))>1) themap.put(input.substring(0, len), themap.get(input.substring(0,len))-1);
			else themap.remove(input.substring(0, len));
			return check30(input.substring(len), themap, len);
		}
		return false;
	}
}