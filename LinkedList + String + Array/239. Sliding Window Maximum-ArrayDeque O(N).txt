    public int[] maxSlidingWindow(int[] nums, int k) {
        int winposi= nums.length>=k? nums.length-k+1:1;
        if(k==0 && nums.length==0) winposi=0;
        int[] res=new int[winposi];
        Deque<Integer> deque = new ArrayDeque<Integer>();
        for(int i = 0; i < nums.length; i++){
            if(deque.size() > 0 && deque.peek() < i - k + 1){
                deque.poll();
            }
            while(deque.size() > 0 && nums[deque.peekLast()] < nums[i] ){
                deque.pollLast();
            }
            deque.offer(i);
            if(i >= k - 1){
                res[i - k + 1] = nums[deque.peek()];
            }
        }
        return res;
    }