class Solution {
    public int minCut(String s) {
        boolean dp[][]=new boolean[s.length()][s.length()];
		for(int i=0; i<s.length();i++) {
			for(int j=0;j<=i;j++) {
				if (s.charAt(i)==s.charAt(j)&& (i-j<=2 || dp[j+1][i-1])) {
					dp[j][i]=true;
				}
			}
		}
		if(s==null || s.length()==0 || dp[0][s.length()-1]) return 0;
		for(int i=1; i<s.length()-1; i++) {
			if(dfs(s,s, i,dp)) return i;
		}
		return s.length()-1;
    }
    private boolean dfs(String s, String input, int curr,boolean[][] dp) {
		if(dp[s.length()-input.length()][s.length()-1] && curr==0) return true;
		if (curr==0 && !dp[s.length()-input.length()][s.length()-1]) return false;
		for(int i=0;i<input.length()-1;i++) {
//			String part1=input.substring(0, i);
//	        String part2=input.substring(i);
	        if(!dp[s.length()-input.length()][s.length()-input.length()+i]) continue;
	        else {
	        	if(dfs(s,input.substring(i+1), curr-1,dp)) return true;
	        }
		}
		return false;
	}
}