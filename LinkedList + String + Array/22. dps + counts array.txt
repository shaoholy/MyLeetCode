class Solution {
    public List<String> generateParenthesis(int n) {
        int[] counts=new int[2];
        Arrays.fill(counts,n);
        List<String> res=new LinkedList<String>();
        String curr="";
        dfs22(res,curr,counts);
        return res;
    }
    private void dfs22(List<String> res, String curr, int[] counts){
        if(counts[0]==0 && counts[1]==0){
            res.add(curr);
            return;
        }
        for(int i=0; i<2; i++){
            if(counts[i]<=0) continue;
            curr= i==0? curr+"(":curr+")";
            counts[i]--;
            if(counts[1]>=counts[0]){
                dfs22(res, curr, counts);
            }
            counts[i]++;
            curr=curr.substring(0, curr.length()-1);
        }
    }
}